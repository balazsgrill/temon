@namespace(uri="http://temon.hu", prefix="temon")
package temon;

import "http://www.eclipse.org/emf/2002/Ecore";

@namespace(uri="http://temon.hu/ast", prefix="ast")
package ast{
	
	abstract class Node{
		
	}
	
	abstract class VisibleNode extends Node{
		attr int[1] start;
		attr int[1] length;
	}
	
	class WhitespaceNode extends VisibleNode{
		ref grammar.Terminal terminal;
	}
	
	class TerminalNode extends VisibleNode{
		ref grammar.Terminal terminal;
		attr String content;
	}
	
	class RemovedTerminalNode extends TerminalNode{
		
	}
	
	class InsertedTerminalNode extends TerminalNode{
		
	}
	
	class InsertedFeatureSetTerminalNode extends InsertedTerminalNode, FeatureSetTerminalNode{
		
	}
	
	abstract interface FeatureSet{
		attr String featureName;
	}
	
	class FeatureSetValue extends Node, FeatureSet{
		attr String value;
	}
	
	class FeatureSetTerminalNode extends TerminalNode, FeatureSet{
		
	}
	
	class CompositeNode extends Node{
		ref grammar.Rule nonterminal;
		val Node[*] children;
	}
	
	class FeatureSetCompositeNode extends CompositeNode, FeatureSet{
		
	}
	
	class PushElement extends Node{
		ref EClass[1] eclass;
	}
	
	class FeatureSetPushElement extends PushElement, FeatureSet{
		
	}
	
	class PopElement extends Node{
		
	}
	
}

@namespace(uri="http://temon.hu/grammar", prefix="grammar")
package grammar{

	class GrammarModel{
		val Terminal[*] terminals;
		val Rule[*] rules;
		attr String[1] startItem;
		ref GrammarModel[*] ~import;
		attr String[1] name;
		ref ecore.EPackage[*] eimport;
	}

	class Terminal{
		attr String[1] name;
		attr String[1] regex;
		attr boolean hide;
		val Replace[*] replace;
		attr int priority = 1;
		ref Terminal superTerminal;
	}

	class Replace{
		attr String[1] search;
		attr String[1] replace;
	}

	class Rule{
		attr String[1] nonTerminal;
		val RuleItem[*] body;
	}
	
	abstract class RuleItem{
	}
	
	abstract class SyntaxItem extends RuleItem{
		attr boolean optional;
		attr boolean many;
	}
	
	class TerminalItem extends SyntaxItem{
		attr String featureName;
		ref Terminal[1] terminal;
	}

	class NonTerminalItem extends SyntaxItem{
		attr String featureName;
		attr String[1] nonTerminal;
	}

	class SetValue extends RuleItem{
		attr String[1] featureName;
		attr String[1] value;
	}

	class Push extends RuleItem{
		ref EClass[1] eclass;
		attr String featureName;
	}

	class Pop extends RuleItem{		
	}

}

@namespace(uri="http://temon.hu/tokens", prefix="tokens")
package tokens{
	
	class Token{
		ref grammar.Terminal terminal;
		attr String value;
		attr int start;
		attr int length;
	}
	
	class TokenList{
		val Token[*] tokens;
	}
	
}